basePath: /api/v1
definitions:
  dto.IssueRequest:
    properties:
      assignee:
        type: string
      boardId:
        type: string
      description:
        type: string
      dueDate:
        type: string
      stageId:
        type: string
      startDate:
        type: string
      title:
        type: string
      typeId:
        type: string
    required:
    - assignee
    - boardId
    - description
    - dueDate
    - stageId
    - startDate
    - title
    - typeId
    type: object
  dto.IssueResponse:
    properties:
      assignee:
        type: string
      boardId:
        type: string
      createdAt:
        type: string
      createdBy:
        type: string
      description:
        type: string
      dueDate:
        type: string
      id:
        type: integer
      stageId:
        type: string
      startDate:
        type: string
      title:
        type: string
      typeId:
        type: string
      updatedAt:
        type: string
      updatedBy:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /issues:
    get:
      description: get all issues
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.IssueResponse'
            type: array
      summary: Get all issues
      tags:
      - issues
    post:
      consumes:
      - application/json
      description: Create a new issue using the provided IssueRequest
      parameters:
      - description: Issue Request
        in: body
        name: issue
        required: true
        schema:
          $ref: '#/definitions/dto.IssueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created issue
          schema:
            $ref: '#/definitions/dto.IssueResponse'
      summary: Create an Issue
      tags:
      - issues
  /issues/{id}:
    delete:
      description: Delete an issue by its ID
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Issue deleted
      summary: Delete an Issue
      tags:
      - issues
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
